@page "/playcodele"
@inject HttpClient Http
@using CodeleLogic
<div class="background">
    <div class='container-fluid'>
        <div class='row'>
            <div class='col-lg-8'>
                <div class="game-header">
                    <h1 class="game-title">Codele</h1>
                    <p class="game-description">Guess the 5-letter, coding-related word in 5 tries or less!</p>
                    
                    <div class="attempt-counter">
                        Attempt #: @attempts
                    </div>
                </div>

                <!-- Display the player's guesses -->
                <div class="guess-grid">
                    @foreach (var guess in guesses)
                    {
                        List<(char, LetterStatus)>? statuses = guess.GuessStatus;
                        <div class="guess-row">
                            @if (statuses != null)
                            {
                                @foreach (var status in statuses)
                                {
                                    char letter = Char.ToUpper(status.Item1);
                                    <div class="letter-tile @GetLetterTileClass(status.Item2)">
                                        @letter
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>

                <!-- Display message if guess is not 5 characters long -->
                @if (displayGuessSizeMsg == true)
                {
                    <div class="error-message">
                        Guess must be 5 characters long @message
                    </div>
                }

                <!-- Input section for the player to type and submit a guess -->
                <div class="input-section">
                    <div class="mb-3">
                        <label class="form-label fw-bold" for="guess">
                            <u>G</u>uess
                        </label>
                        <input class="form-control guess-input" 
                               style="max-width: 300px; margin: 0 auto;"
                               @ref="guess" 
                               maxlength="5" 
                               required
                               id="guess" 
                               autofocus 
                               accesskey="g" 
                               placeholder="Enter 5 letters" 
                               @bind="newGuess" />
                    </div>
                    
                    @if (!showModal)
                    {
                        <button class="submit-btn" accesskey="s" @onclick="SubmitGuess">
                            <u>S</u>ubmit Guess
                        </button>
                    }
                </div>

                <!-- Game over modal -->
                @if (showModal && answer != null)
                {
                    <div class="game-over-modal">
                        <h2 class="game-over-title @(gameStatusMessage == "You Won!" ? "win" : "lose")">
                            @gameStatusMessage
                        </h2>
                        
                        <div class="correct-answer">
                            <strong>Correct Answer:</strong> @answer.ToUpper()
                        </div>
                        
                        <button accesskey="n" type="button" class="new-game-btn" @onclick="StartNewGame">
                            <u>N</u>ew Game
                        </button>
                        
                        @if (gameStatusMessage == "You Won!") { 
                            <PlaySound AnswerState=true Play=true />
                        }
                        else
                        {
                            <PlaySound AnswerState=false Play=true />
                        }
                    </div>
                }
            </div>
            
            <div class='col-lg-4'>
                @if (answers != null)
                {
                    <div class="word-list-card">
                        <h3 class="mb-3 text-center">Available Words</h3>
                        <div class="word-list">
                            @{
                                counter = 0;
                            }
                            @foreach (var answer in answers.OrderBy(x => x))
                            {
                                counter++;
                                @answer.ToUpper()
                                @if (counter < answers.Length)
                                {
                                    <text>, </text>
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
