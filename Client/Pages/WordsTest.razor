@page "/words"
<div class="row align-items-center g-2">
	<div class="col-auto">
		<button @ref="LoadWordsButton" class="btn btn-primary btn-lg" accesskey="w" @onclick="LoadWordAsync">
			Load
			@WordsToLoad
			more Words
		</button>
	</div>
	<div class="col-auto">
		<label class="control-label">Score</label> @score / @WordsToLoad
	</div>
	<div class="col-auto">
		<label class="visually-hidden">Maximum Word Length</label>
		<div class='d-none d-lg-block'>
			<input class="form-control" placeholder="Max Length" type="number" style="width:150px" @bind="@MaximumWordLength" />
		</div>
		<div class='d-lg-none'>
			<input class="form-control" placeholder="Max Length" type="number" style="width:100px" @bind="@MaximumWordLength" />
		</div>
	</div>
	@if (!HideKey)
	{
		<div class="col-auto">
			<label class="visually-hidden">API Key</label>
			<input class="form-control" placeholder="API Key" type="text" style="width:400px" @bind="@APIKey" />
		</div>
	}
	<div class="col-auto">
		<label class="visually-hidden">Begins With</label>
		<div class='d-none d-lg-block'>
			<input class="form-control" placeholder="Begins With" type="text" style="width:138px" @bind="@BeginsWith" />
		</div>
		<div class='d-lg-none'>
			<input class="form-control" placeholder="Begins With" type="text" @bind="@BeginsWith" />
		</div>
	</div>

</div>

<hr />
@if (LoadWordResults?.WordResults != null)
{
	@if (ShowWord == true)
	{
		<div>Select the word that matches the definition below:</div>
	}
	<div style="display:inline;" class="">
		@foreach (var wordResultLoop in LoadWordResults.WordResults.OrderBy(x => x.RandomOrder))
		{
			@if (ShowWord && !string.IsNullOrWhiteSpace(wordResultLoop?.word))
			{
				<div style="display:inline;" class="">
					<button @onclick="@(() => CheckAnswerAsync(@wordResultLoop?.word))" style="margin:3px"
				class="btn btn-info btn-lg d-none d-lg-inline">
						@wordResultLoop?.word
					</button>
				</div>

				@* <a target="_blank" href="https://en.wikipedia.org/wiki/@wordResult?.word">Look Up @wordResult?.word</a> *@
			}
		}
		@foreach (var wordResultLoop in LoadWordResults.WordResults.OrderBy(x => x.RandomOrder))
		{
			@if (ShowWord && !string.IsNullOrWhiteSpace(wordResultLoop?.word))
			{
				<div class="d-flex custom-layout d-lg-none">
					<button @onclick="@(() => CheckAnswerAsync(@wordResultLoop?.word))" style="margin:3px"
				class="btn btn-primary btn-sm d-lg-none">
						@wordResultLoop?.word
					</button>
				</div>
			}
		}

	</div>

	@if (@Message != null)
	{
		<hr />
		<h1 class="text-danger">Unexpected Error Please load another word.</h1>
		<div class="text-danger">@Message</div>
		<h5>Json Received:</h5>
		<h6 class="text-muted">@result</h6>
	}

	@if (response != null)
	{
		@if (response.Contains("✖"))
		{
			<h1 class='text-danger'>@response</h1>
		}
		else
		{
			<h1 class='text-success'>@response</h1>

		}
	}
}
else
{
	<div style="display:normal;margin:auto;" class="">
		<div class="loader d-flex flex-column justify-content-center align-items-center">
			<h4>LOADING</h4>
		</div>
	</div>
	@Message
}
<hr />

@if (LoadWordResults?.WordResults != null && ShowWord == true)
{
	@if (wordResult?.results?.Count() > 1)
	{
		<h2 class="d-none d-lg-block">Definitions</h2>
		<h5 class="d-lg-none">Definitions</h5>
	}
	else
	{
		<h2 class="d-none d-lg-block">Definition</h2>
		<h5 class="d-lg-none">Definition</h5>
	}
	<ul>
		@if (wordResult?.results != null)
		{
			@foreach (var item in wordResult.results)
			{
				<li class='@dynamicClass'>
					<h1 class='d-none d-lg-block'>
						@item?.definition
					</h1>
					<h4 class='d-lg-none'>
						@item?.definition
					</h4>
					@if (item?.partOfSpeech != null)
					{
						<span> (@item?.partOfSpeech)</span>
					}
				</li>
			}
		}
	</ul>
}
