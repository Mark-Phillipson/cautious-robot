@page "/words"
<div class="background">
<div class="container-fluid">

<!-- Game Header Card -->
<div class="game-header">
    <div class="row align-items-center g-3">
        @if (!ApiKeyAvailable || (!isLoading && LoadWordResults == null && !string.IsNullOrEmpty(Message)))
        {
            <div class="col-12">
                <div class="api-key-section">
                    <ApiKeyEntry OnApiKeySaved="OnApiKeySaved" />
                    <div class="alert alert-info mt-3">🎮 Please enter your Words API key to start playing!</div>
                    @if (ApiKeyAvailable && !string.IsNullOrEmpty(Message))
                    {
                        <button class="btn control-btn btn-secondary mt-2" @onclick="OnChangeApiKey">
                            🔑 Change API Key
                        </button>
                    }
                </div>
            </div>
        }
        else if (ApiKeyAvailable)
        {
            <div class="col-auto">
                <button class="btn control-btn btn-secondary" @onclick="OnChangeApiKey">
                    🔑 Change API Key
                </button>
            </div>
        }
        
        <div class="col-auto">
            <button @ref="LoadWordsButton" class="btn control-btn" accesskey="w" @onclick="LoadWordAsync">
                🎯 Load Words / Reset
            </button>
            <span class="level-badge">Level @(wordsToLoad-1)</span>
        </div>
        
        <div class="col-auto">
            <button class="btn control-btn btn-secondary" type="button" @onclick="@( ( ) => ShowOptions() )">
                ⚙️ Options
            </button>
        </div>
    </div>

    @if ((GameOptions?.ShowOptions ?? false))
    {
        <div class="options-panel mt-3">
            <h5 class="mb-3">🎮 Game Options</h5>
            <form>
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Maximum Word Length</label>
                        <input required min="2" max="60" step="1" class="form-control modern-input" 
                               placeholder="Max Length" type="number" @bind="@GameOptions.MaximumWordLength" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Show Synonyms Instead</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" @bind="@GameOptions.IncludeSynonymsInstead" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Begins With</label>
                        <input class="form-control modern-input" maxlength="@GameOptions.MaximumWordLength" 
                               placeholder="Starting letters" type="text" @bind="@GameOptions.BeginsWith" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Word Type</label>
                        <input class="form-control modern-input" placeholder="e.g. noun, verb" 
                               type="text" @bind="@GameOptions.WordType" />
                    </div>
                </div>
            </form>
        </div>
    }
</div>
<!-- Congratulations Section -->
@if (questionsCorrect == wordsToLoad)
{
    <div class="congratulations">
        <h1 class="d-none d-lg-block">🎉 Congratulations! Next Level! ✨</h1>
        <h5 class="d-lg-none">🎉 Congratulations! Next Level! ✨</h5>
        <img src="/images/Fireworks.gif" class="d-none d-lg-block" alt="Celebration fireworks" />
        <img src="/images/Fireworks.gif" width="200" class="d-lg-none" alt="Celebration fireworks" />
    </div>
}

<!-- Main Game Area -->
@if (!isLoading && LoadWordResults?.WordResults != null)
{
    Index = 0;
    
    <div class="word-selection-area">
        @if (ShowWord == true)
        {
            @if (GameOptions?.IncludeSynonymsInstead == true)
            {
                <h4 class="text-center mb-4">🔍 Select the word that matches the synonyms below:</h4>
            }
            else
            {
                <h4 class="text-center mb-4">🔍 Select the word that matches the definition below:</h4>
            }
        }
        
        <!-- Desktop Word Buttons -->
        <div class="d-none d-sm-block text-center">
            @{wordCounter=0;}
            @foreach (var wordResultLoop in LoadWordResults.WordResults.OrderBy(x => x.RandomOrder))
            {
                wordCounter++;
                @if (ShowWord && !string.IsNullOrWhiteSpace(wordResultLoop?.word))
                {
                    var indexPosition1 = Index;
                    <button accesskey="@(wordCounter<10 ? wordCounter.ToString() : "")" 
                            @onclick="@(() => CheckAnswerAsync(@wordResultLoop?.word, indexPosition1))"
                            class="btn word-btn @ButtonClass[Index]">
                        <span class="badge bg-primary me-2">@wordCounter</span>@wordResultLoop?.word
                    </button>
                    Index = Index + 1;
                }
            }
        </div>
        
        <!-- Mobile Word Buttons -->
        <div class="d-sm-none">
            @{Index = 0;}
            @foreach (var wordResultLoop in LoadWordResults.WordResults.OrderBy(x => x.RandomOrder))
            {
                @if (ShowWord && !string.IsNullOrWhiteSpace(wordResultLoop?.word))
                {
                    var indexPosition2 = Index;
                    <div class="mb-2">
                        <button @onclick="@(() => CheckAnswerAsync(@wordResultLoop?.word,indexPosition2))"
                                class="btn word-btn-mobile @ButtonClass[Index]">
                            @wordResultLoop?.word
                        </button>
                    </div>
                    Index = Index + 1;
                }
            }
        </div>
    </div>
    <!-- Error Messages -->
    @if (@Message != null)
    {
        <div class="error-card">
            <h4 class="text-danger">⚠️ Unexpected Error</h4>
            <p class="text-danger mb-2">Please load another word to continue.</p>
            <div class="text-danger mb-3">@Message</div>
            <details class="mt-3">
                <summary class="text-muted">Technical Details (JSON Response)</summary>
                <pre class="text-muted mt-2"><code>@result</code></pre>
            </details>
        </div>
    }

    <!-- Response Messages -->
    @if (response != null)
    {
        <div class="text-center my-3">
            @if (response.Contains("✖"))
            {
                <h2 class='text-danger'>@response</h2>
            }
            else
            {
                <h2 class='text-success'>@response</h2>
            }
        </div>
    }
}
else if (isLoading)
{
    <div>
        <div class="text-center">
            <div class="spinner-border mb-3" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <h4>🎮 LOADING WORDS...</h4>
            <p class="text-muted">Preparing your challenge</p>
        </div>
    </div>
}
else
{
    <div class="error-card">
        <div class="text-danger">@Message</div>
        @if (!ApiKeyAvailable)
        {
            <div class="api-key-section mt-3">
                <ApiKeyEntry OnApiKeySaved="OnApiKeySaved" />
                <p class="mt-2">🎮 Please enter your Words API key to play the word game.</p>
            </div>
        }
        else
        {
            <div class="mt-3">
                <button class="btn control-btn me-2" @onclick="LoadWordAsync">🔄 Try Again</button>
                <button class="btn control-btn btn-secondary" @onclick="OnChangeApiKey">🔑 Change API Key</button>
            </div>
            @if (Message != null && (Message.Contains("403") || Message.Contains("Forbidden")))
            {
                <div class="alert alert-warning mt-3">
                    <strong>🔐 API Key Issue:</strong> This might be due to an invalid API key, CORS restrictions in development, or quota limits. 
                    Try changing your API key or test on the production site.
                </div>
            }
        }
    </div>
}

<!-- Definitions Section -->
@if (LoadWordResults?.WordResults != null && ShowWord == true)
{
    <div class="definitions-area">
        @if (WordResult?.results?.Count() > 1 && GameOptions?.IncludeSynonymsInstead == false)
        {
            <h2 class="d-none d-lg-block">📚 Definitions</h2>
            <h5 class="d-lg-none">📚 Definitions</h5>
        }
        else
        {
            @if (GameOptions?.IncludeSynonymsInstead==true)
            {
                <h2 class="d-none d-lg-block">🔗 Synonyms</h2>
                <h5 class="d-lg-none">🔗 Synonyms</h5>
            }
            else
            {
                <h2 class="d-none d-lg-block">📖 Definition</h2>
                <h5 class="d-lg-none">📖 Definition</h5>
            }
        }
        
        @if (GameOptions?.IncludeSynonymsInstead == true && (WordResult?.results?.FirstOrDefault()?.synonyms?.Any() == true))
        {
            <div class="row">
                @foreach (var item in WordResult?.results?.FirstOrDefault()?.synonyms ?? Enumerable.Empty<string>())
                {
                    <div class="col-md-6 mb-3">
                        <div class="definition-item">
                            <h3 class='d-none d-lg-block text-primary'>
                                @item
                            </h3>
                            <h5 class='d-lg-none text-primary'>
                                @item
                            </h5>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            @if (WordResult?.results != null)
            {
                @foreach (var item in WordResult.results)
                {
                    <div class="definition-item">
                        <h4 class='d-none d-lg-block'>
                            @item?.definition
                        </h4>
                        <h6 class='d-lg-none'>
                            @item?.definition
                        </h6>
                        @if (item?.partOfSpeech != null)
                        {
                            <span class="badge bg-secondary ms-2">@item?.partOfSpeech</span>
                        }
                    </div>
                }
            }
        }
    </div>
}

<!-- Audio Component -->
@if (AnswerState && PlayAudio)
{
    <PlaySound AnswerState=true Play=true />
}
else if (PlayAudio)
{
    <PlaySound AnswerState=false Play=true />
}
else
{
    <PlaySound AnswerState=false Play=false />
}

</div>
</div>