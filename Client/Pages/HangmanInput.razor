@using Microsoft.AspNetCore.Components

<div class="hangman-input-container">
    <div class="layout-toggle">
        <button class="toggle-btn @(UseKeyboardLayout ? "" : "active")" @onclick="() => ToggleLayout(false)">
            üî§ ABC
        </button>
        <button class="toggle-btn @(UseKeyboardLayout ? "active" : "")" @onclick="() => ToggleLayout(true)">
            ‚å®Ô∏è QWERTY
        </button>
    </div>
    
    @if (UseKeyboardLayout)
    {
        <div class="keyboard-layout">
            @foreach (var row in KeyboardRows)
            {
                <div class="keyboard-row">
                    @foreach (var letter in row)
                    {
                        var isGuessed = GuessedLettersUpper.Contains(letter);
                        if (Disabled || isGuessed)
                        {
                            <button class="letter-btn keyboard-btn" disabled>
                                @letter
                            </button>
                        }
                        else
                        {
                            <button class="letter-btn keyboard-btn" @onclick="() => GuessLetter(letter)">
                                @letter
                            </button>
                        }
                    }
                </div>
            }
        </div>
    }
    else
    {
        <div class="letter-grid alphabetical">
            @foreach (var letter in AlphabeticalLetters)
            {
                var isGuessed = GuessedLettersUpper.Contains(letter);
                if (Disabled || isGuessed)
                {
                    <button class="letter-btn" disabled>
                        @letter
                    </button>
                }
                else
                {
                    <button class="letter-btn" @onclick="() => GuessLetter(letter)">
                        @letter
                    </button>
                }
            }
        </div>
    }
</div>

@code {
    [Parameter] public EventCallback<char> OnGuess { get; set; }
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public HashSet<char> GuessedLetters { get; set; } = new();
    [Parameter] public bool UseKeyboardLayout { get; set; } = true;
    [Parameter] public EventCallback<bool> OnLayoutChanged { get; set; }

    private static readonly char[] AlphabeticalLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
    
    private static readonly char[][] KeyboardRows = new char[][]
    {
        "QWERTYUIOP".ToCharArray(),
        "ASDFGHJKL".ToCharArray(),
        "ZXCVBNM".ToCharArray()
    };

    // Always compare using uppercase for robustness
    private HashSet<char> GuessedLettersUpper => new HashSet<char>(GuessedLetters.Select(c => char.ToUpperInvariant(c)));

    private async Task GuessLetter(char letter)
    {
        letter = char.ToUpperInvariant(letter);
        if (!Disabled && !GuessedLettersUpper.Contains(letter))
        {
            await OnGuess.InvokeAsync(letter);
        }
    }

    private async Task ToggleLayout(bool useKeyboard)
    {
        UseKeyboardLayout = useKeyboard;
        await OnLayoutChanged.InvokeAsync(useKeyboard);
    }
}
