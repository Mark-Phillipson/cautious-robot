@using Microsoft.AspNetCore.Components

<div class="hangman-keyboard">
    @foreach (var letter in Letters)
    {
        var isGuessed = GuessedLettersUpper.Contains(letter);
        if (Disabled || isGuessed)
        {
            <button class="hangman-key @(isGuessed ? "guessed" : "")" disabled>
                @letter
            </button>
        }
        else
        {
            <button class="hangman-key" @onclick="() => GuessLetter(letter)">
                @letter
            </button>
        }
    }
</div>

@code {
    [Parameter] public EventCallback<char> OnGuess { get; set; }
    [Parameter] public bool Disabled { get; set; }=false;
    [Parameter] public HashSet<char> GuessedLetters { get; set; } = new();

    private static readonly char[] Letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();

    // Always compare using uppercase for robustness
    private HashSet<char> GuessedLettersUpper => new HashSet<char>(GuessedLetters.Select(c => char.ToUpperInvariant(c)));

    private async Task GuessLetter(char letter)
    {
        letter = char.ToUpperInvariant(letter);
        if (!Disabled && !GuessedLettersUpper.Contains(letter))
        {
            await OnGuess.InvokeAsync(letter);
        }
    }
}
